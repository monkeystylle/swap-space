// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String    @id @default(cuid())
  username     String    @unique
  email        String    @unique
  passwordHash String   
  googleId     String?   @unique // Add this for Google OAuth
  sessions     Session[]
}

model Session {
  id        String   @id
  expiresAt DateTime
  userId    String
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@index([userId])
}


model Comment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  content   String   @db.VarChar(1024)
}




model SurveyResponse {
  id              String   @id @default(cuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // Text input
  fullName        String
  email           String
  
  // Textarea
  feedback        String?  @db.VarChar(2000)
  
  // Select
  department      String
  
  // Radio group
  experienceLevel String
  
  // Checkbox
  isSubscribed    Boolean  @default(false)
  
  // Multiple checkboxes stored as JSON
  interests       String   @db.Text // Stored as JSON string
  
  // Date
  availableDate   DateTime
  
  // Switch
  agreeToTerms    Boolean  @default(false)
  
  // Rating (can be represented as an integer)
  satisfaction    Int      @default(0) // 0-5 rating
}